tracing:
  http:
    name: envoy.zipkin
    typed_config:
      "@type": type.googleapis.com/envoy.config.trace.v2.ZipkinConfig
      collector_cluster: jaeger
      collector_endpoint: "/api/v1/spans"
      shared_span_context: true

static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          tracing:
            operation_name: egress
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  prefix_rewrite: "/"
                  cluster: my_service

          http_filters:
            - name: envoy.ext_authz
              config:
                http_service:
                  server_uri:
                    uri: http://authorization-service:8080
                    cluster: authz_service
                    timeout: 2s
                  authorization_request:
                    allowed_headers:
                      patterns:
                        prefix: "x-*"

            - name: envoy.router
              config: {}
  clusters:
  - name: authz_service
    connect_timeout: 3s
    common_http_protocol_options: {idle_timeout: 30s}
    type: STRICT_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    hosts:
      - socket_address: { address: auth-service, port_value: 8080 }

  - name: my_service
    connect_timeout: 0.5s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    hosts: [{ socket_address: { address: my-service, port_value: 8080 }}]

  - name: jaeger
    connect_timeout: 0.5s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    hosts: [{ socket_address: { address: jaeger, port_value: 9411 }}]